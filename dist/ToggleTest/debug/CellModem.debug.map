Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/ToggleTest/debug\CellModem.debug.sym \
  --cmf=dist/ToggleTest/debug\CellModem.debug.cmf -z -Q18F2480 \
  -oC:\Users\jordanm1\AppData\Local\Temp\s4mg.2 \
  -Mdist/ToggleTest/debug/CellModem.debug.map -E1 -ver=XC8 \
  -ASTACK=09Bh-02eeh -pstack=STACK -ACODE=00h-03CFFh -ACONST=00h-03CFFh \
  -ASMALLCONST=0300h-03FFhx58 -AMEDIUMCONST=0300h-03CFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02EEh -ABIGRAM=01h-02EEh \
  -ARAM=060h-0FFh,0100h-01FFh,0200h-02EEh -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02EEh \
  -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0F9Bh,0F9Dh-0FD3h,0FD5h-0FDAh,0FE0h-0FE2h,0FE8h-0FEAh,0FF0h-0FFBh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\jordanm1\AppData\Local\Temp\s4mg.obj \
  dist/ToggleTest/debug\CellModem.debug.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\jordanm1\AppData\Local\Temp\s4mg.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        6        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/ToggleTest/debug\CellModem.debug.obj
                intcode                               8        8        E        4       0
                temp                                 4F       4F        1        1       1
                smallconst                          300      300       B6      180       0
                intcode_body                        8C8      8C8       9A      1DB       0
                text22                              BC6      BC6       36      1DB       0
                text21                              C9C      C9C       1C      1DB       0
                text20                              CDE      CDE        E      1DB       0
                text19                              9D4      9D4       70      1DB       0
                text18                              C76      C76       26      1DB       0
                text17                              764      764       B4      1DB       0
                text16                              AAE      AAE       66      1DB       0
                text15                              A44      A44       6A      1DB       0
                text14                              B8E      B8E       38      1DB       0
                text13                              68C      68C       D8      1DB       0
                text12                              CEC      CEC        4      1DB       0
                text11                              B14      B14       40      1DB       0
                text10                              C26      C26       2A      1DB       0
                text9                               3B6      3B6       FE      1DB       0
                text8                               B54      B54       3A      1DB       0
                text7                               962      962       72      1DB       0
                text6                               CB8      CB8       14      1DB       0
                text5                               4B4      4B4       F8      1DB       0
                text4                               CCC      CCC       12      1DB       0
                text3                               5AC      5AC       E0      1DB       0
                text2                               CF0      CF0        2      1DB       0
                text1                               BFC      BFC       2A      1DB       0
                text0                               818      818       B0      1DB       0
                cstackCOMRAM                          1        1       32        1       1
                cstackBANK0                          92       92        9       60       1
                bssBANK0                             60       60       32       60       1
                bssCOMRAM                            33       33       1C        1       1
                cinit                               C50      C50       26      1DB       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        6         0
                intcode_body                        8C8      8C8       9A         0
                text22                              BC6      BC6       36         0
                text21                              C9C      C9C       1C         0
                text20                              CDE      CDE        E         0
                text19                              9D4      9D4       70         0
                text18                              C76      C76       26         0
                text17                              764      764       B4         0
                text16                              AAE      AAE       66         0
                text15                              A44      A44       6A         0
                text14                              B8E      B8E       38         0
                text13                              68C      68C       D8         0
                text12                              CEC      CEC        4         0
                text11                              B14      B14       40         0
                text10                              C26      C26       2A         0
                text9                               3B6      3B6       FE         0
                text8                               B54      B54       3A         0
                text7                               962      962       72         0
                text6                               CB8      CB8       14         0
                text5                               4B4      4B4       F8         0
                text4                               CCC      CCC       12         0
                text3                               5AC      5AC       E0         0
                text2                               CF0      CF0        2         0
                text1                               BFC      BFC       2A         0
                text0                               818      818       B0         0
                cinit                               C50      C50       26         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       B6         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 4F       4F        1         1
                cstackCOMRAM                          1        1       32         1
                bssCOMRAM                            33       33       1C         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          92       92        9         1
                bssBANK0                             60       60       32         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000006  000006         0       0  CODE    
                cstackCOMRAM                   000001  00004F  000050         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                bssBANK0                       000060  00003B  00009B        60       1  BANK0   
                smallconst                     000300  0000B6  0003B6       180       0  SMALLCON
                text9                          0003B6  00093C  000CF2       1DB       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00009B-0000FF               65
        BANK1            000100-0001FF              100
        BANK2            000200-0002EE               EF
        BIGRAM           000050-00005F               10
                         00009B-0002EE              254
        CODE             000006-000007                2
                         00001A-0002FF              2E6
                         000CF2-003CFF             300E
        COMRAM           000050-00005F               10
        CONST            000006-000007                2
                         00001A-0002FF              2E6
                         000CF2-003CFF             300E
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000CF2-003CFF             300E
        RAM              00009B-0002EE              100
        SFR              000D00-000F9B              100
                         000F9D-000FD3               37
                         000FD5-000FDA                6
                         000FE0-000FE2                3
                         000FE8-000FEA                3
                         000FF0-000FFB                C
        SMALLCONST       000CF2-003CFF              100
        STACK            00009B-0002EE              254

                                  Symbol Table

?_RunToggleService                   cstackCOMRAM 000016
?___awmod                            cstackCOMRAM 000011
?___wmul                             cstackCOMRAM 000017
?_printf                             cstackCOMRAM 000011
ES_CheckUserEvents@i                 cstackCOMRAM 000011
ES_DeQueue@NumLeft                   cstackCOMRAM 000024
ES_DeQueue@SaveCrit                  cstackCOMRAM 000023
ES_DeQueue@pBlock                    cstackCOMRAM 00001D
ES_DeQueue@pReturnEvent              cstackCOMRAM 00001F
ES_DeQueue@pThisQueue                cstackCOMRAM 000025
ES_EnQueueFIFO@Event2Add             cstackCOMRAM 00001F
ES_EnQueueFIFO@SaveCrit              cstackCOMRAM 000025
ES_EnQueueFIFO@pBlock                cstackCOMRAM 00001D
ES_EnQueueFIFO@pThisQueue            cstackCOMRAM 000026
ES_GetMSBitSet@LoopCntr              cstackCOMRAM 00001A
ES_GetMSBitSet@Nybble2Test           cstackCOMRAM 000019
ES_GetMSBitSet@ReturnVal             cstackCOMRAM 000018
ES_GetMSBitSet@Val2Check             cstackCOMRAM 000011
ES_InitQueue@BlockSize               cstackCOMRAM 000013
ES_InitQueue@pBlock                  cstackCOMRAM 000011
ES_InitQueue@pThisQueue              cstackCOMRAM 000014
ES_Initialize@NewRate                cstackBANK0  000092
ES_Initialize@i                      cstackCOMRAM 000032
ES_PostToService@TheEvent            cstackCOMRAM 000028
ES_PostToService@WhichService        cstackCOMRAM 00002D
ES_Run@HighestPrior                  cstackCOMRAM 000031
ES_Run@ThisEvent                     bssCOMRAM    00004C
ES_Timer_Init@Rate                   cstackCOMRAM 000013
ES_Timer_InitTimer@NewTime           cstackCOMRAM 000011
ES_Timer_InitTimer@Num               cstackCOMRAM 000015
ES_Timer_Tick_Resp@NeedsProcessing   bssCOMRAM    000036
ES_Timer_Tick_Resp@NewEvent          bssCOMRAM    000033
ES_Timer_Tick_Resp@NextTimer2Process bssCOMRAM    000044
ISR@LastTime                         bssCOMRAM    000038
ISR@NextTime                         bssCOMRAM    00003A
InitToggleService@Priority           cstackCOMRAM 000031
InitToggleService@ThisEvent          cstackCOMRAM 00002E
PostToggleService@ThisEvent          cstackCOMRAM 00002E
RunToggleService@ReturnEvent         cstackCOMRAM 000019
RunToggleService@ThisEvent           cstackCOMRAM 000016
TemplateService@MyPriority           bssCOMRAM    000045
ToggleService@MyPriority             bssCOMRAM    000046
_ADCON1bits                          (abs)        000FC1
_AccelerometerIOC                    bssCOMRAM    000047
_BitNum2SetMask                      smallconst   000301
_CCP1CON                             (abs)        000FBD
_CCP1IF                              (abs)        007CF2
_CCPR1H                              (abs)        000FBF
_CCPR1L                              (abs)        000FBE
_Check4Keystroke                     text12       000CEC
_CurrentState                        bssCOMRAM    000048
_DistList00                          smallconst   000359
_ES_CheckUserEvents                  text11       000B14
_ES_DeQueue                          text9        0003B6
_ES_EnQueueFIFO                      text17       000764
_ES_EventList                        smallconst   000357
_ES_GetMSBitSet                      text7        000962
_ES_InitQueue                        text22       000BC6
_ES_Initialize                       text13       00068C
_ES_PostToService                    text16       000AAE
_ES_Run                              text3        0005AC
_ES_Timer_Init                       text20       000CDE
_ES_Timer_InitTimer                  text15       000A44
_ES_Timer_Tick_Resp                  text5        0004B4
_EventQueues                         smallconst   000354
_GIE                                 (abs)        007F97
_INTCON                              (abs)        000FF2
_IRCF0                               (abs)        007E9C
_IRCF1                               (abs)        007E9D
_IRCF2                               (abs)        007E9E
_ISR                                 intcode      000008
_InitToggleService                   text14       000B8E
_LATA                                (abs)        000F89
_LATA0                               (abs)        007C48
_LATA1                               (abs)        007C49
_LATA2                               (abs)        007C4A
_LATB                                (abs)        000F8A
_LATC                                (abs)        000F8B
_LATC0                               (abs)        007C58
_MyPriority                          bssCOMRAM    000049
_Nybble2MSBitNum                     smallconst   000341
_PIE1                                (abs)        000F9D
_PORTA                               (abs)        000F80
_PORTB                               (abs)        000F81
_PORTC                               (abs)        000F82
_PORTCbits                           (abs)        000F82
_PacketReceived                      bssCOMRAM    00004A
_PostToggleService                   text6        000CB8
_Queue0                              bssBANK0     000080
_Ready                               bssCOMRAM    00003C
_RunToggleService                    text8        000B54
_ServDescList                        smallconst   000350
_SysTickCounter                      bssCOMRAM    00003E
_T1CON                               (abs)        000FCD
_TMR_ActiveFlags                     bssCOMRAM    000040
_TMR_TimerArray                      bssBANK0     000060
_TRISA                               (abs)        000F92
_TRISB                               (abs)        000F93
_TRISC                               (abs)        000F94
_TickCount                           bssCOMRAM    00004B
_Timer2PostFunc                      smallconst   000321
__CFG_BBSIZ$1024                     (abs)        000000
__CFG_BOREN$BOHW                     (abs)        000000
__CFG_BORV$3                         (abs)        000000
__CFG_CP0$OFF                        (abs)        000000
__CFG_CP1$OFF                        (abs)        000000
__CFG_CPB$OFF                        (abs)        000000
__CFG_CPD$OFF                        (abs)        000000
__CFG_EBTR0$OFF                      (abs)        000000
__CFG_EBTR1$OFF                      (abs)        000000
__CFG_EBTRB$OFF                      (abs)        000000
__CFG_FCMEN$OFF                      (abs)        000000
__CFG_IESO$OFF                       (abs)        000000
__CFG_LPT1OSC$OFF                    (abs)        000000
__CFG_LVP$ON                         (abs)        000000
__CFG_MCLRE$ON                       (abs)        000000
__CFG_OSC$IRCIO67                    (abs)        000000
__CFG_PBADEN$OFF                     (abs)        000000
__CFG_PWRT$OFF                       (abs)        000000
__CFG_STVREN$ON                      (abs)        000000
__CFG_WDT$OFF                        (abs)        000000
__CFG_WDTPS$32768                    (abs)        000000
__CFG_WRT0$OFF                       (abs)        000000
__CFG_WRT1$OFF                       (abs)        000000
__CFG_WRTB$OFF                       (abs)        000000
__CFG_WRTC$OFF                       (abs)        000000
__CFG_WRTD$OFF                       (abs)        000000
__CFG_XINST$OFF                      (abs)        000000
__HRAM                               (abs)        000000
__HW_Process_Pending_Ints            text4        000CCC
__HW_Timer_Init                      text21       000C9C
__HW_Timer_Init@Rate                 cstackCOMRAM 000011
__Habs1                              abs1         000000
__Hbank0                             bank0        000000
__Hbank1                             bank1        000000
__Hbank2                             bank2        000000
__Hbigbss                            bigbss       000000
__Hbigdata                           bigdata      000000
__Hbigram                            bigram       000000
__Hbss                               bss          000000
__HbssBANK0                          bssBANK0     000000
__HbssCOMRAM                         bssCOMRAM    000000
__Hcinit                             cinit        000000
__Hclrtext                           clrtext      000000
__Hcomram                            comram       000000
__Hconfig                            config       30000E
__Hconst                             const        000000
__HcstackBANK0                       cstackBANK0  000000
__HcstackCOMRAM                      cstackCOMRAM 000000
__Hdata                              data         000000
__Heeprom_data                       eeprom_data  000000
__Hend_init                          end_init     00001A
__Hfarbss                            farbss       000000
__Hfardata                           fardata      000000
__Hibigdata                          ibigdata     000000
__Hidata                             idata        000000
__Hidloc                             idloc        200008
__Hifardata                          ifardata     000000
__Hinit                              init         000016
__Hintcode                           intcode      000016
__Hintcode_body                      intcode_body 000000
__Hintcodelo                         intcodelo    000016
__Hintentry                          intentry     000000
__Hintret                            intret       000000
__Hintsave_regs                      intsave_regs 000000
__Hirdata                            irdata       000000
__Hmediumconst                       mediumconst  000000
__HnvFARRAM                          nvFARRAM     000000
__Hnvbit                             nvbit        000000
__Hnvrram                            nvrram       000000
__Hparam                             rparam       000000
__Hpowerup                           powerup      000016
__Hram                               ram          000000
__Hramtop                            ramtop       000300
__Hrbit                              rbit         000000
__Hrbss                              rbss         000000
__Hrdata                             rdata        000000
__Hreset_vec                         reset_vec    000006
__Hrparam                            rparam       000000
__Hsfr                               sfr          000000
__Hsmallconst                        smallconst   0003B6
__Hspace_0                           (abs)        30000E
__Hspace_1                           (abs)        00009B
__Hspace_2                           (abs)        000000
__Hstack                             stack        000000
__Hstruct                            struct       000000
__Htemp                              temp         000050
__Htext                              text         000000
__Htext0                             text0        000000
__Htext1                             text1        000000
__Htext10                            text10       000000
__Htext11                            text11       000000
__Htext12                            text12       000000
__Htext13                            text13       000000
__Htext14                            text14       000000
__Htext15                            text15       000000
__Htext16                            text16       000000
__Htext17                            text17       000000
__Htext18                            text18       000000
__Htext19                            text19       000000
__Htext2                             text2        000000
__Htext20                            text20       000000
__Htext21                            text21       000000
__Htext22                            text22       000000
__Htext3                             text3        000000
__Htext4                             text4        000000
__Htext5                             text5        000000
__Htext6                             text6        000000
__Htext7                             text7        000000
__Htext8                             text8        000000
__Htext9                             text9        000000
__LRAM                               (abs)        000001
__Labs1                              abs1         000000
__Lbank0                             bank0        000000
__Lbank1                             bank1        000000
__Lbank2                             bank2        000000
__Lbigbss                            bigbss       000000
__Lbigdata                           bigdata      000000
__Lbigram                            bigram       000000
__Lbss                               bss          000000
__LbssBANK0                          bssBANK0     000000
__LbssCOMRAM                         bssCOMRAM    000000
__Lcinit                             cinit        000000
__Lclrtext                           clrtext      000000
__Lcomram                            comram       000000
__Lconfig                            config       300000
__Lconst                             const        000000
__LcstackBANK0                       cstackBANK0  000000
__LcstackCOMRAM                      cstackCOMRAM 000000
__Ldata                              data         000000
__Leeprom_data                       eeprom_data  000000
__Lend_init                          end_init     000016
__Lfarbss                            farbss       000000
__Lfardata                           fardata      000000
__Libigdata                          ibigdata     000000
__Lidata                             idata        000000
__Lidloc                             idloc        200000
__Lifardata                          ifardata     000000
__Linit                              init         000016
__Lintcode                           intcode      000008
__Lintcode_body                      intcode_body 000000
__Lintcodelo                         intcodelo    000016
__Lintentry                          intentry     000000
__Lintret                            intret       000000
__Lintsave_regs                      intsave_regs 000000
__Lirdata                            irdata       000000
__Lmediumconst                       mediumconst  000000
__LnvFARRAM                          nvFARRAM     000000
__Lnvbit                             nvbit        000000
__Lnvrram                            nvrram       000000
__Lparam                             rparam       000000
__Lpowerup                           powerup      000016
__Lram                               ram          000000
__Lramtop                            ramtop       000300
__Lrbit                              rbit         000000
__Lrbss                              rbss         000000
__Lrdata                             rdata        000000
__Lreset_vec                         reset_vec    000000
__Lrparam                            rparam       000000
__Lsfr                               sfr          000000
__Lsmallconst                        smallconst   000300
__Lspace_0                           (abs)        000000
__Lspace_1                           (abs)        000000
__Lspace_2                           (abs)        000000
__Lstack                             stack        000000
__Lstruct                            struct       000000
__Ltemp                              temp         00004F
__Ltext                              text         000000
__Ltext0                             text0        000000
__Ltext1                             text1        000000
__Ltext10                            text10       000000
__Ltext11                            text11       000000
__Ltext12                            text12       000000
__Ltext13                            text13       000000
__Ltext14                            text14       000000
__Ltext15                            text15       000000
__Ltext16                            text16       000000
__Ltext17                            text17       000000
__Ltext18                            text18       000000
__Ltext19                            text19       000000
__Ltext2                             text2        000000
__Ltext20                            text20       000000
__Ltext21                            text21       000000
__Ltext22                            text22       000000
__Ltext3                             text3        000000
__Ltext4                             text4        000000
__Ltext5                             text5        000000
__Ltext6                             text6        000000
__Ltext7                             text7        000000
__Ltext8                             text8        000000
__Ltext9                             text9        000000
__PRIMASK_temp                       bssCOMRAM    000042
__S0                                 (abs)        30000E
__S1                                 (abs)        00009B
__S2                                 (abs)        000000
___awmod                             text19       0009D4
___awmod@counter                     cstackCOMRAM 000015
___awmod@dividend                    cstackCOMRAM 000011
___awmod@divisor                     cstackCOMRAM 000013
___awmod@sign                        cstackCOMRAM 000016
___inthi_sp                          stack        000000
___intlo_sp                          stack        000000
___lbmod                             text10       000C26
___lbmod@counter                     cstackCOMRAM 000013
___lbmod@dividend                    cstackCOMRAM 000012
___lbmod@divisor                     cstackCOMRAM 000011
___lbmod@rem                         cstackCOMRAM 000014
___param_bank                        (abs)        000010
___rparam_used                       (abs)        000001
___sp                                stack        000000
___wmul                              text18       000C76
___wmul@multiplicand                 cstackCOMRAM 000019
___wmul@multiplier                   cstackCOMRAM 000017
___wmul@product                      cstackCOMRAM 00001B
__accesstop                          (abs)        000060
__activetblptr                       (abs)        000002
__end_of_BitNum2SetMask              smallconst   000321
__end_of_Check4Keystroke             text12       000CF0
__end_of_DistList00                  smallconst   00035B
__end_of_ES_CheckUserEvents          text11       000B54
__end_of_ES_DeQueue                  text9        0004B4
__end_of_ES_EnQueueFIFO              text17       000818
__end_of_ES_EventList                smallconst   000359
__end_of_ES_GetMSBitSet              text7        0009D4
__end_of_ES_InitQueue                text22       000BFC
__end_of_ES_Initialize               text13       000764
__end_of_ES_PostToService            text16       000B14
__end_of_ES_Run                      text3        00068C
__end_of_ES_Timer_Init               text20       000CEC
__end_of_ES_Timer_InitTimer          text15       000AAE
__end_of_ES_Timer_Tick_Resp          text5        0005AC
__end_of_EventQueues                 smallconst   000357
__end_of_ISR                         intcode_body 000962
__end_of_InitToggleService           text14       000BC6
__end_of_Nybble2MSBitNum             smallconst   000350
__end_of_PostToggleService           text6        000CCC
__end_of_RunToggleService            text8        000B8E
__end_of_ServDescList                smallconst   000354
__end_of_Timer2PostFunc              smallconst   000341
__end_of__HW_Process_Pending_Ints    text4        000CDE
__end_of__HW_Timer_Init              text21       000CB8
__end_of___awmod                     text19       000A44
__end_of___lbmod                     text10       000C50
__end_of___wmul                      text18       000C9C
__end_of__initialization             cinit        000C68
__end_of_main                        text0        0008C8
__end_of_printf                      text1        000C26
__end_of_putch                       text2        000CF2
__initialization                     cinit        000C50
__mediumconst                        mediumconst  000000
__pbssBANK0                          bssBANK0     000060
__pbssCOMRAM                         bssCOMRAM    000033
__pcinit                             cinit        000C50
__pcstackBANK0                       cstackBANK0  000092
__pcstackCOMRAM                      cstackCOMRAM 000001
__pintcode                           intcode      000008
__pintcode_body                      intcode_body 0008C8
__psmallconst                        smallconst   000300
__ptext0                             text0        000818
__ptext1                             text1        000BFC
__ptext10                            text10       000C26
__ptext11                            text11       000B14
__ptext12                            text12       000CEC
__ptext13                            text13       00068C
__ptext14                            text14       000B8E
__ptext15                            text15       000A44
__ptext16                            text16       000AAE
__ptext17                            text17       000764
__ptext18                            text18       000C76
__ptext19                            text19       0009D4
__ptext2                             text2        000CF0
__ptext20                            text20       000CDE
__ptext21                            text21       000C9C
__ptext22                            text22       000BC6
__ptext3                             text3        0005AC
__ptext4                             text4        000CCC
__ptext5                             text5        0004B4
__ptext6                             text6        000CB8
__ptext7                             text7        000962
__ptext8                             text8        000B54
__ptext9                             text9        0003B6
__ramtop                             ramtop       000300
__size_of_Check4Keystroke            (abs)        000000
__size_of_ES_CheckUserEvents         (abs)        000000
__size_of_ES_DeQueue                 (abs)        000000
__size_of_ES_EnQueueFIFO             (abs)        000000
__size_of_ES_GetMSBitSet             (abs)        000000
__size_of_ES_InitQueue               (abs)        000000
__size_of_ES_Initialize              (abs)        000000
__size_of_ES_PostToService           (abs)        000000
__size_of_ES_Run                     (abs)        000000
__size_of_ES_Timer_Init              (abs)        000000
__size_of_ES_Timer_InitTimer         (abs)        000000
__size_of_ES_Timer_Tick_Resp         (abs)        000000
__size_of_ISR                        (abs)        000000
__size_of_InitToggleService          (abs)        000000
__size_of_PostToggleService          (abs)        000000
__size_of_RunToggleService           (abs)        000000
__size_of__HW_Process_Pending_Ints   (abs)        000000
__size_of__HW_Timer_Init             (abs)        000000
__size_of___awmod                    (abs)        000000
__size_of___lbmod                    (abs)        000000
__size_of___wmul                     (abs)        000000
__size_of_main                       (abs)        000000
__size_of_printf                     (abs)        000000
__size_of_putch                      (abs)        000000
__smallconst                         smallconst   000300
_main                                text0        000818
_printf                              text1        000BFC
_putch                               text2        000CF0
btemp                                temp         00004F
end_of_initialization                cinit        000C68
int$flags                            temp         00004F
int_func                             intcode_body 0008C8
intlevel0                            text         000000
intlevel1                            text         000000
intlevel2                            text         000000
intlevel3                            text         000000
main@ErrorType                       cstackBANK0  00009A
printf@ap                            cstackCOMRAM 000013
printf@c                             cstackCOMRAM 000015
printf@f                             cstackCOMRAM 000011
stackhi                              (abs)        0002EE
stacklo                              (abs)        00009B
start                                init         000016
start_initialization                 cinit        000C50


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 75 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1    8[BANK0 ] enum E15672
 Return value:  Size  Location     Type
                  2  350[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  f               2   16[COMRAM] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2   18[COMRAM] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1   20[COMRAM] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2   16[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1   48[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15499
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       4       0       0
      Totals:         1       4       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunToggleService
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 224 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostToggleService
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _PostToggleService *****************
 Defined at:
		line 103 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   45[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2   16[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1   25[COMRAM] char 
  Nybble2Test     1   24[COMRAM] unsigned char 
  ReturnVal       1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          5       0       0       0
      Totals:        10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunToggleService *****************
 Defined at:
		line 125 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   21[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   24[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   21[COMRAM] struct ES_Event_t
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ES_Timer_InitTimer
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   28[COMRAM] PTR struct ES_Event_t
		 -> Queue0(18), 
  pReturnEvent    2   30[COMRAM] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   36[COMRAM] PTR struct .
		 -> Queue0(18), 
  NumLeft         1   35[COMRAM] unsigned char 
  SaveCrit        1   34[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          2       0       0       0
      Totals:        10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   17[COMRAM] unsigned char 
  rem             1   19[COMRAM] unsigned char 
  counter         1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Check4Keystroke
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 108 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2    0[BANK0 ] enum E15428
 Auto vars:     Size  Location     Type
  i               1   49[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15499
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       2       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitToggleService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitToggleService *****************
 Defined at:
		line 63 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   48[COMRAM] unsigned char 
  ThisEvent       3   45[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ES_PostToService
		_ES_Timer_InitTimer
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2   16[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15477
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_InitToggleService
		_RunToggleService
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 352 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   39[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   44[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitToggleService
		_PostToggleService
		_InitTemplateFSM
		_PostTemplateFSM
		_InitTemplateService
		_PostTemplateService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   28[COMRAM] PTR struct ES_Event_t
		 -> Queue0(18), 
  Event2Add       3   30[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   37[COMRAM] PTR struct .
		 -> Queue0(18), 
  SaveCrit        1   36[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   22[COMRAM] unsigned int 
  multiplicand    2   24[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   26[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   22[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2   16[COMRAM] int 
  divisor         2   18[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   21[COMRAM] unsigned char 
  counter         1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   16[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2   18[COMRAM] enum E15428
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 79 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2   16[COMRAM] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   16[COMRAM] PTR struct ES_Event_t
		 -> Queue0(18), 
  BlockSize       1   18[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2   19[COMRAM] PTR struct .
		 -> Queue0(18), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 119 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	0764	0000	181
		_ES_DeQueue    		CODE           	03B6	0000	255
		_ES_InitQueue  		CODE           	0BC6	0000	55

ES_Queue.c estimated size: 491

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c
		___awmod       		CODE           	09D4	0000	113

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c estimated size: 113

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c
		_putch         		CODE           	0CF0	0000	3

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c estimated size: 3

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	0B14	0000	65

ES_CheckEvents.c estimated size: 65

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c
		___wmul        		CODE           	0C76	0000	39

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c estimated size: 39

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	0962	0000	115

ES_LookupTables.c estimated size: 115

EventCheckers.c
		_Check4Keystroke		CODE           	0CEC	0000	5

EventCheckers.c estimated size: 5

ES_Framework.c
		_ES_PostToService		CODE           	0AAE	0000	103
		_ES_Run        		CODE           	05AC	0000	225
		_ES_Initialize 		CODE           	068C	0000	217

ES_Framework.c estimated size: 545

ToggleService.c
		_InitToggleService		CODE           	0B8E	0000	57
		_RunToggleService		CODE           	0B54	0000	59
		_PostToggleService		CODE           	0CB8	0000	21

ToggleService.c estimated size: 137

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c
		___lbmod       		CODE           	0C26	0000	43

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c estimated size: 43

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		_DistList00    		SMALLCONST     	0359	0000	3
		_ES_EventList  		SMALLCONST     	0357	0000	3
		_Nybble2MSBitNum		SMALLCONST     	0341	0000	16
		_EventQueues   		SMALLCONST     	0354	0000	4
		__initialization		CODE           	0C50	0000	25
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		_ServDescList  		SMALLCONST     	0350	0000	5

shared estimated size: 122

ES_Port.c
		_ISR           		CODE           	0008	0000	169
		__HW_Process_Pending_Ints		CODE           	0CCC	0000	19
		__HW_Timer_Init		CODE           	0C9C	0000	29

ES_Port.c estimated size: 217

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c
		_printf        		CODE           	0BFC	0000	43

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c estimated size: 43

ES_Timers.c
		_ES_Timer_Init 		CODE           	0CDE	0000	15
		_ES_Timer_InitTimer		CODE           	0A44	0000	107
		_ES_Timer_Tick_Resp		CODE           	04B4	0000	249

ES_Timers.c estimated size: 371

main.c
		_main          		CODE           	0818	0000	177

main.c estimated size: 177

